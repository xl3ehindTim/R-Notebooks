library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggplot2)
data <- read.csv("./data/strava.csv")
data
data <- read.csv("./data/strava.csv")
data.distance
data <- read.csv("./data/strava.csv")
data
data <- read.csv("./data/strava.csv")
data["distance"]
data <- read.csv("./data/strava.csv")
data
data <- read.csv("./data/strava.csv")
print(is.data.frame(data))
data <- read.csv("./data/strava.csv")
print(data$distance)
data <- read.csv("./data/strava.csv")
print(data$X.distance.moving_time.start_date.gear_id.type)
data <- read.csv("./data/strava.csv", sep=";")
print(data$X.distance.moving_time.start_date.gear_id.type)
data <- read.csv("./data/strava.csv", sep=";")
data
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggplot2)
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
uniqueBicycles <- data %>% distinct(gear_id)
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
uniqueBicycles <- data %>% distinct(gear_id)
uniqueBicycles
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
uniqueBicycles <- data %>% distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles
uniqueBicycles <- data %>% distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
uniqueBicycles <- data %>% filter(type == "Ride" || type == "VirtualRide") distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles <- data %>% filter(type == "Ride", type == "VirtualRide") distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles <- data %>% filter(type == "Ride" || type == "VirtualRide") %>% distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles
uniqueBicycles <- data %>%
filter(type == "Ride" || type == "VirtualRide") %>% distinct(gear_id) %>% summarise(amount=n())
uniqueBicycles
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id)
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id)
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(speed=distance / moving_time)
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(speed=distance / moving_time)
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(speed=sum(moving_time))
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(speed=sum(distance) / sum(moving_time))
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time))
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(average_speed)
speed
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
data
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(desc(average_speed))
speed
uniqueBicycles <- data %>%
filter(type == "Ride" || type == "VirtualRide") %>% # Filter on type is Ride or VirtualRide. This is not necessary at the moment since other activities don't have a gear_id
distinct(gear_id) %>% # Get all unique gear_id's
summarise(amount=n()) # Get amount of rows left by unique gear id
# Show amount of unique bicycles
uniqueBicycles
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(desc(average_speed))
speed
speed <- data %>% distinct(gear_id) %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(desc(average_speed))
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(desc(average_speed))
speed
uniqueBicycles <- data %>%
filter(type == "Ride"m type == "VirtualRide") %>% # Filter on type is Ride or VirtualRide. This is not necessary at the moment since other activities don't have a gear_id
uniqueBicycles <- data %>%
filter(type == "Ride" || type == "VirtualRide") %>% # Filter on type is Ride or VirtualRide. This is not necessary at the moment since other activities don't have a gear_id
distinct(gear_id) %>% # Get all unique gear_id's
summarise(amount=n()) # Get amount of rows left by unique gear id
# Show amount of unique bicycles
uniqueBicycles
speed <- data %>% group_by(gear_id) %>% summarise(average_speed=sum(distance) / sum(moving_time)) %>% arrange(desc(average_speed))
speed
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
time <- data %>%
mutate(
date = as.Date(start_date),
hour = hour(start_date),
) %>%
group_by(Month = format(date, "%m")) %>%
summarise(average_starting_hour = mean(hour)) %>%
mutate(MonthName=month.abb[as.factor(Month)]) %>%
arrange(Month)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
data <- read.csv("./data/strava.csv", sep = ";") # Convert CSV data to dataframe in R. Use ; as the seperator
View(data)
time <- data %>%
mutate(
date = as.Date(start_date),
hour = hour(start_date),
) %>%
group_by(Month = format(date, "%m")) %>%
summarise(average_starting_hour = mean(hour)) %>%
mutate(MonthName=month.abb[as.factor(Month)]) %>%
arrange(Month)
time
ggplot(time, aes(x = reorder(MonthName, as.numeric(Month)), y=average_starting_hour, group=1)) +
geom_line() +
labs(x="Maand", y="Gemiddelde starttijd (uur)", title="Starttijd op maand")
uniqueBicycles <- data %>%
filter(type == "Ride" || type == "VirtualRide") %>% # Filter on type is Ride or VirtualRide. This is not necessary at the moment since other activities don't have a gear_id
distinct(gear_id) %>% # Get all unique gear_id's
summarise(amount=n()) # Get amount of rows left by unique gear id
# Show amount of unique bicycles
uniqueBicycles
speed <- data %>%
filter(!is.na(gear_id)) %>% # Remove rows with NA gear_id (non bicycle)
group_by(gear_id) %>%   # Group on gear_id
summarise(average_speed=sum(distance) / sum(moving_time)) %>% # Calculate average speed by using sum distance / sum moving time
arrange(desc(average_speed)) # Arrange from high to low
ggplot(speed, aes(x=gear_id, y=average_speed)) +
geom_col() +
labs(x="Fiets ID", y="Gemiddelde snelheid (km/u)", title="Snelheid per fiets") +
geom_text(aes(label = round(average_speed, digits=2)), vjust = -0.2)
time <- data %>%
mutate(
date = as.Date(start_date),
hour = hour(start_date),
) %>%
group_by(Month = format(date, "%m")) %>%
summarise(average_moving_time = mean(moving_time)) %>%
mutate(MonthName=month.abb[as.factor(Month)]) %>%
arrange(Month)
time
ggplot(time, aes(x = reorder(MonthName, as.numeric(Month)), y=average_moving_time, group=1)) +
geom_line()
